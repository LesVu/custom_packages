name: Build Neovim

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 0 1 * *"

  workflow_dispatch:

jobs:
 check-version:
    name: Check current up to date or not.
    runs-on: ubuntu-latest
    outputs:
      LATEST: ${{ steps.checks.outputs.LATEST }}
      VERSION: ${{ steps.checks.outputs.VERSION }}
    steps:
      - name: Check update
        id: checks
        run: |
          CURRENT_VERSION=$(curl -s https://raw.githubusercontent.com/LesVu/custom_debian_repo/main/debian/dists/bookworm/main/binary-arm64/Packages |\
          awk '/^Package: neovim/ {flag=1} flag && /^Version:/ {print $2; flag=0}')
          LATEST_VERSION=$(curl -s https://api.github.com/repos/neovim/neovim/releases/latest |\
          jq -r '.tag_name')
          LATEST_VERSION_CUT=${LATEST_VERSION#v}
          if [ "$CURRENT_VERSION" == "$LATEST_VERSION_CUT" ]; then
            echo "LATEST=True" >> "$GITHUB_OUTPUT"
          else
            echo "LATEST=False" >> "$GITHUB_OUTPUT"
          fi
          echo "CURRENT_VERSION=$CURRENT_VERSION"
          echo "LATEST_VERSION_CUT=$LATEST_VERSION_CUT"
          echo "LATEST_VERSION=$LATEST_VERSION"

 neovim-debian:
    name: Build package on arm64
    needs: [check-version]
    if: needs.check-version.outputs.LATEST == 'False'
    runs-on: self-hosted

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: checkout deb repo
        uses: actions/checkout@v4
        with:
          repository: "LesVu/custom_debian_repo"
          path: "debian"
          token: ${{ secrets.PAT }}

      - name: checkout Neovim
        uses: actions/checkout@v4
        with:
          repository: neovim/neovim
          path: neovim
          ref: stable

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(TZ='Asia/Singapore' /bin/date "+%I:%M%p_%d/%m/%Y")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Mkdir
        run: |
          rm -rf ~/.ccache
          mkdir -p ~/.ccache

      - name: ccache cache files
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: neovim_arm64-ccache-

      - name: Install Build deps
        run: |
          sudo apt-get update && sudo apt-get install -q -y \
          git reprepro jq build-essential ccache libtool-bin tar unzip ninja-build gettext cmake unzip \
          software-properties-common curl libunibilium-dev

      - name: Build
        run: |
          mkdir -p artifacts
          cd neovim
          make NVIM_BUILD_TYPE=Release CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
          cd build
          cpack -G DEB -D CPACK_DEBIAN_PACKAGE_NAME=neovim -D CPACK_DEBIAN_FILE_NAME=DEB-DEFAULT
          mv *.deb ../../artifacts

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: ~/.ccache
          key: neovim_arm64-ccache-${{ steps.get-date.outputs.date }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: List GPG keys
        run: gpg -K

      - name: Write new package to repo
        run: |
          cd $GITHUB_WORKSPACE/debian
          reprepro -V -b ./debian --confdir ./conf --section other -C main includedeb bookworm ../artifacts/*.deb || echo "Failed to write new packages file"
          rm -rf ../artifacts/

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "debian/*"
          repository: "debian"
