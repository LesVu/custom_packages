name: Build GCC

on:
  workflow_dispatch:

jobs:
  llvm-debian:
    name: Build package on arm64
    runs-on: self-hosted
    timeout-minutes: 1440

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install deps
        run: |
          export DEBIAN_FRONTEND=noninteractive
          git config --global http.postBuffer 157286400
          sudo cat <<EOF > "/etc/apt/sources.list"
          deb-src http://deb.debian.org/debian unstable main
          EOF
          apt-get update && apt-get install -q -y \
          git build-essential apt-utils git-buildpackage dh-autoreconf quilt dh-ocaml time libz3-dev cowbuilder pbuilder
          mkdir gcc-13
          cd gcc-13
          apt-get source gcc-13 binutils
          cd ..
          sudo cat <<'EOF' > "/etc/pbuilderrc"
          # the hook dir may already be set/populated!
          HOOKDIR="/etc/pbuilder/hook.d"
          if [ -n "$DEPS" ] ; then
                  export DEPSBASE=/var/cache/pbuilder/deps
                  BINDMOUNTS=$DEPSBASE
          fi
          EOF
          sudo mkdir -p /etc/pbuilder/hook.d/
          sudo cat <<'EOF' > "/etc/pbuilder/hook.d/D10apt-ftparchive"
          DEPSPATH="$DEPSBASE/$DEPS"
          if [ -n "$DEPS" ] && [ -d "$DEPSPATH" ] ; then
                  apt-get install --assume-yes apt-utils
                  ( cd "$DEPSPATH"; apt-ftparchive packages . > Packages )
                  echo "deb [trusted=yes] file://$DEPSPATH ./" >> /etc/apt/sources.list
                  apt-get update
          fi
          EOF
          sudo chmod +x /etc/pbuilder/hook.d/D10apt-ftparchive
          sudo mkdir -p /var/cache/pbuilder/deps/debian
          sudo cp debian/pool/* /var/cache/pbuilder/deps/debian
          pbuilder create --distribution bookworm
          echo "apt-mark hold hello hello-traditional" > command.sh
          pbuilder execute --save-after-exec ./command.sh

      - name: Build
        run: |

          cd gcc-13
          # pbuilder build binutils*.dsc
          # cp /var/cache/pbuilder/result/*.deb /var/cache/pbuilder/deps/debian
          DEPS=debian pbuilder build gcc-13*.dsc

      - name: Move to debian repo
        run: |
          cp /var/cache/pbuilder/result/*.deb debian/pool
          rm -f debian/pool/*-dbg*.deb

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: List GPG keys
        run: gpg -K

      - name: Write new package to repo
        run: |
          cd $GITHUB_WORKSPACE/debian
          rm Packages || echo "Failed to remove packages file"
          rm Packages.gz || echo "Failed to remove packages.gz file"
          rm Release || echo "Failed to remove release file"
          rm Release.gpg || echo "Failed to remove release.gpg file"
          rm InRelease || echo "Failed to remove inrelease file"
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          apt-ftparchive release . > Release
          gpg --default-key LesVu -abs -o - Release > Release.gpg || error "failed to sign Release.gpg with gpg "
          gpg --default-key LesVu --clearsign -o - Release > InRelease || error "failed to sign InRelease with gpg"

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: 'debian/*'
