name: Build Packages

on:
  workflow_dispatch:
    inputs:
      package:
        required: true
        type: string
        description: "Package specified to build"
      options:
        required: false
        type: string
        description: Option passed
      source:
        description: 'Where to get the source code'
        required: false
        default: 'debian_sid'
        type: choice
        options:
          - git
          - debian_sid

jobs:
  package-debian:
    name: Build package on arm64
    runs-on: self-hosted
    timeout-minutes: 1440

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: checkout deb repo
        uses: actions/checkout@v4
        with:
          repository: "LesVu/custom_debian_repo"
          path: "debian"
          token: ${{ secrets.PAT }}

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(TZ='Asia/Singapore' /bin/date "+%I:%M%p_%d/%m/%Y")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Mkdir
        run: mkdir -p ~/.ccache

      - name: ccache cache files
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: build-bookworm-arm64-ccache-

      - name: Install deps
        run: |
          export DEBIAN_FRONTEND=noninteractive
          git config --global http.postBuffer 157286400
          sudo cat <<EOF | sudo tee "/etc/apt/sources.list.d/debian_src.sources" >/dev/null
          Types: deb-src
          URIs: http://deb.debian.org/debian
          Suites: unstable
          Components: main
          Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg
          EOF
          sudo apt-get update && sudo apt-get install -q -y \
          git build-essential apt-utils git-buildpackage dh-autoreconf quilt dh-ocaml time libz3-dev cowbuilder pbuilder reprepro
          mkdir build-package
          cd build-package
          apt-get source ${{ inputs.package }}
          cd ..
          sudo cat <<'EOF' | sudo tee "/etc/pbuilderrc" >/dev/null 
          # the hook dir may already be set/populated!
          HOOKDIR="/etc/pbuilder/hook.d"
          if [ -n "$DEPS" ] ; then
                  export DEPSBASE=/var/cache/pbuilder/deps
                  BINDMOUNTS=$DEPSBASE
          fi
          EOF
          sudo mkdir -p /etc/pbuilder/hook.d/
          sudo cat <<'EOF' | sudo tee "/etc/pbuilder/hook.d/D10apt-ftparchive" >/dev/null 
          DEPSPATH="$DEPSBASE/$DEPS"
          if [ -n "$DEPS" ] && [ -d "$DEPSPATH" ] ; then
            apt-get install --assume-yes apt-utils
            ( cd "$DEPSPATH"; apt-ftparchive packages . > Packages )
            echo "deb [trusted=yes] file://$DEPSPATH ./" >> /etc/apt/sources.list
            echo "deb [trusted=yes] https://lesvu.github.io/custom_debian_repo/debian bookworm main" >> /etc/apt/sources.list
            apt-get update
          fi
          EOF
          sudo chmod +x /etc/pbuilder/hook.d/D10apt-ftparchive
          sudo rm -rf /var/cache/pbuilder/deps/debian
          sudo mkdir -p /var/cache/pbuilder/deps/debian
          if [ -e "/var/cache/pbuilder/base.tgz" ]; then
            sudo pbuilder update
          else
            sudo pbuilder create --distribution bookworm
            echo "apt-mark hold hello hello-traditional" > command.sh
            sudo pbuilder execute --save-after-exec ./command.sh
          fi

      - name: Build
        run: |

          cd build-package
          # pbuilder build binutils*.dsc
          # cp /var/cache/pbuilder/result/*.deb /var/cache/pbuilder/deps/debian
          input_string="${{inputs.package}}"
          if [[ "$input_string" == *" "* ]]; then
            IFS=" " read -ra words <<< "$input_string"
            for word in "${words[@]}"; do
              DEPS=debian sudo pbuilder build ${{ inputs.options }} ${word}*.dsc
              sudo cp -r /var/cache/pbuilder/result/*.deb /var/cache/pbuilder/deps/debian
            done
          else
            DEPS=debian sudo pbuilder build ${{ inputs.options }} ${input_string}*.dsc
          fi

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: List GPG keys
        run: gpg -K

      - name: Write new package to repo
        run: |
          cd $GITHUB_WORKSPACE/debian
          reprepro -V -b ./debian --confdir ./conf --section other -C main includedeb bookworm /var/cache/pbuilder/result/*.deb || echo "Failed to write new packages file"
          sudo rm -rf /var/cache/pbuilder/result/*

      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "debian/*"
          repository: "debian"

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: ~/.ccache
          key: build-bookworm-arm64-ccache-${{ steps.get-date.outputs.date }}
